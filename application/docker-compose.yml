version: "2.4"

networks:
  app_network:
    driver: bridge
    name: app_network

services:
  frontend:
    build:
      context: ..
      dockerfile: frontend/Dockerfile
    container_name: frontend
    ports:
      - "3001:3001"
      - "8002:8000"
    networks:
      - app_network
    environment:
      - KAFKA_PRODUCER_URL=http://kafka-producer:8000
      - FLINK_PROCESSOR_URL=http://flink-processor:8001
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - NODE_ENV=production
      - PORT=3001
      - HOSTNAME=0.0.0.0
    depends_on:
      - kafka-producer
      - flink-processor
      - postgres
    restart: unless-stopped
    mem_limit: 256m

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms256m"
      ZOOKEEPER_MAX_CLIENT_CNXNS: 60
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - app_network
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    restart: unless-stopped
    mem_limit: 768m

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_NUM_PARTITIONS=3
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_HEAP_OPTS=-Xmx512m -Xms256m
    networks:
      - app_network
    volumes:
      - kafka_data:/bitnami/kafka
    restart: unless-stopped
    mem_limit: 1g

  kafka-producer:
    build:
      context: ./kafka-producer
    container_name: kafka-producer
    ports:
      - "8000:8000"
    volumes:
      - ../debug-api:/mnt:rw
      - ../:/app:rw
    depends_on:
      - kafka
      - zookeeper
      - postgres
    environment:
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: "zookeeper:2181"
      PRODUCER_INTERVAL: 100
    networks:
      - app_network
    restart: unless-stopped
    mem_limit: 256m

  flink-processor:
    build:
      context: ./flink-processor
      dockerfile: Dockerfile
    container_name: flink-processor
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: "zookeeper:2181"
      PRODUCER_INTERVAL: 100
    networks:
      - app_network
    restart: unless-stopped
    mem_limit: 512m
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  postgres:
    build:
      context: ./postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5438:5432"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    mem_limit: 256m

volumes:
  settings:
  data:
  zookeeper_data:
    driver: local
  zookeeper_log:
    driver: local
  kafka_data:
    driver: local
  postgres_data:
    driver: local
