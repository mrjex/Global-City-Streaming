apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: global-city-streaming
spec:
  type: LoadBalancer
  ports:
  - port: 3001
    targetPort: 3001
    name: http
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: global-city-streaming
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: joel030303/frontend:latest  # Replace with your image
        ports:
        - containerPort: 3001
        env:
        - name: KAFKA_PRODUCER_URL
          value: "http://kafka-producer:8000"
        - name: FLINK_PROCESSOR_URL
          value: "http://flink-processor:8001"
        - name: POSTGRES_HOST
          value: "postgres"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          value: "postgres"
        - name: NODE_ENV
          value: "production"
        - name: CITY_API_URL
          value: "http://city-api:8003"
        - name: WEATHER_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: weather-api-key
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "250m" 