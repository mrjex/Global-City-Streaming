apiVersion: apps/v1
kind: Deployment
metadata:
  name: city-api
  namespace: global-city-streaming
spec:
  replicas: 1
  selector:
    matchLabels:
      app: city-api
  template:
    metadata:
      labels:
        app: city-api
    spec:
      serviceAccountName: city-api-sa
      containers:
      - name: city-api
        image: joel030303/city-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8003
        command: ["uvicorn"]
        args: ["city-api.main:app", "--host", "0.0.0.0", "--port", "8003"]
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
        env:
        - name: PYTHONPATH
          value: /app
        - name: PORT
          value: "8003"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: kafka-0.kafka.global-city-streaming.svc.cluster.local:9092
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEATHER_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: weather-api-key
        volumeMounts:
        - name: app-code
          mountPath: /app/city-api
        - name: app-config
          mountPath: /app/configuration.yml
          subPath: configuration.yml
        - name: shared-files
          mountPath: /app/shared/weather
          subPath: weather
      volumes:
      - name: app-code
        configMap:
          name: city-api-code
      - name: app-config
        configMap:
          name: app-config-yml
      - name: shared-files
        configMap:
          name: shared-files
