apiVersion: apps/v1
kind: Deployment
metadata:
  name: city-api
  namespace: {{ .Release.Namespace }}
  labels:
    app: city-api
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: city-api
  template:
    metadata:
      labels:
        app: city-api
    spec:
      serviceAccountName: city-api-sa
      initContainers:
      - name: init-dirs
        image: busybox
        command: ['/bin/sh', '-c']
        args:
        - |
          echo "Starting initialization..."
          
          # Create directories
          mkdir -p /setup/city_api/config
          mkdir -p /setup/shared/weather
          
          echo "Created directories. Listing source files:"
          echo "Contents of /shared:"
          ls -la /shared/
          echo "Contents of /city-api:"
          ls -la /city-api/
          
          # Set up shared module
          echo "Setting up shared module..."
          cp /shared/__init__.py /setup/shared/ || echo "Failed to copy shared/__init__.py"
          cp /shared/utils.py /setup/shared/ || echo "Failed to copy shared/utils.py"
          cp /shared/weather.__init__.py /setup/shared/weather/__init__.py || echo "Failed to copy weather/__init__.py"
          cp /shared/weather.api.py /setup/shared/weather/api.py || echo "Failed to copy weather/api.py"
          cp /shared/weather.city_coordinates.py /setup/shared/weather/city_coordinates.py || echo "Failed to copy weather/city_coordinates.py"
          
          # Set up city-api module
          echo "Setting up city-api module..."
          cp /city-api/__init__.py /setup/city_api/ || echo "Failed to copy city-api/__init__.py"
          cp /city-api/main.py /setup/city_api/ || echo "Failed to copy city-api/main.py"
          mkdir -p /setup/city_api/config
          cp /city-api/config.configuration.yml /setup/city_api/config/configuration.yml || echo "Failed to copy config/configuration.yml"
          cp /city-api/config.city-edits.yml /setup/city_api/config/city-edits.yml || echo "Failed to copy config/city-edits.yml"
          cp /city-api/config.country-codes.json /setup/city_api/config/country-codes.json || echo "Failed to copy config/country-codes.json"
          
          # Set permissions
          echo "Setting permissions..."
          chown -R 1000:1000 /setup
          chmod -R 755 /setup
          
          echo "Final directory structure:"
          echo "Contents of /setup:"
          ls -R /setup
        volumeMounts:
        - name: shared-code
          mountPath: /shared
        - name: city-api-code
          mountPath: /city-api
        - name: app-volume
          mountPath: /setup
      containers:
      - name: city-api
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        command: ['/bin/sh', '-c']
        args:
        - |
          echo "Container starting..."
          echo "Python path: $PYTHONPATH"
          echo "Directory contents of /app:"
          ls -la /app
          echo "Contents of /app/city_api:"
          ls -la /app/city_api || echo "city_api directory not found"
          echo "Contents of /app/shared:"
          ls -la /app/shared || echo "shared directory not found"
          echo "Starting uvicorn..."
          python -m uvicorn city_api.main:app --host 0.0.0.0 --port {{ .Values.service.port }} --log-level debug
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        - name: PYTHONPATH
          value: /app
        - name: PORT
          value: "{{ .Values.service.port }}"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: {{ .Values.kafka.bootstrapServers }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEATHER_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: weather-api-key
        - name: GEODB_CITIES_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: geodb-cities-api-key
        volumeMounts:
        - name: app-volume
          mountPath: /app
      volumes:
      - name: shared-code
        configMap:
          name: shared-code
          defaultMode: 0644
      - name: city-api-code
        configMap:
          name: city-api-code
          defaultMode: 0644
      - name: app-volume
        emptyDir: {} 